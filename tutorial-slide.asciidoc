deck.js Support for Asciidoc
=============================
:author: Qingping Hou 
:email: <dave2008713@gmail.com>
:description: an example for writing deck.js presentation with asciidoc
:revdate: 2011-12-16
:revnumber: 1.0
///////////////////////
Themes that you can choose includes:
web-2.0, swiss, neon
///////////////////////
:deckjs_theme: neon
///////////////////////
Transitions that you can choose includes:
fade, horizontal-slide, vertical-slide
///////////////////////
:deckjs_transition: vertical-slide
///////////////////////
AsciiDoc use `source-highlight` as default highlighter.

Uncomment following two lines if you want to highlight your code with `Pygments`
Styles avaliable for pygment highlighter:
monokai, manni, perldoc, borland, colorful, default, murphy, vs, trac, tango, fruity, autumn, bw, emacs, vim, pastie, friendly, native,
///////////////////////
:pygments:
:pygments_sytle: native


== What is deck.js?

*deck.js* is a JavaScript library for building modern HTML presentations. *deck.js* is flexible enough to let advanced CSS and JavaScript authors craft highly customized decks, but also provides templates and themes for the HTML novice to build a standard slideshow.


For more information, please check out its http://imakewebthings.github.com/deck.js/[Project page].

== How to generate deck.js with Asciidoc

It's just as simple as issusing following command:

...........................................
asciidoc -f deckjs.conf file.asciidoc
...........................................


== Shortcuts
Folloing are built-in shortcuts in deck.js:

* jump to any slide by given number, `g`.
* preview all slides, `m`.


== Syntax (basic)

This part assumes that you are already familiar with some basic concepts in AsciiDoc.

* slides are divided by *level 1* sections.
...........................................
== Slide1 title

say whatever you want here.
...........................................

* lists

...........................................
* entry1
* entry2
* entry3
...........................................

* you can choose theme and transition effect by specifying the *deckjs-theme* and *deckjs-transition* attributes:

...........................................
:deckjs_theme: neon
:deckjs_transition: vertical-slide
...........................................


//////////////////////////////////////////////////////
* ordered list

...........................................
1. entry1
1. entry2
1. entry3
...........................................

A complete guide for lists can be found at http://www.methods.co.nz/asciidoc/userguide.html#X64[this page]
//////////////////////////////////////////////////////

== Syntax (nested slide)

Nested slide (or subslide) give you the ability to create substeps in slides. In this backend, elements marked by *incrementa* option will be paused before show up.

syntax:

...........................................
[options="incremental"]
* this entry should be the first to show up
* this entry should show up following the first one
* this entry should be the last one
...........................................

effect:

[options="incremental"]
* this entry should be the first to show up
* this entry should show up following the first one
* this entry should be the last one 

== Syntax (literal block)
syntax:

	...........................................
	<html>
		<head>
		</head>
		<body>
			<p>Hello World.</p>
		</body>
	</html>
	...........................................

effect:

[options="incremental"]
...........................................
<html>
	<head>
	</head>
	<body>
		<p>Hello World.</p>
	</body>
</html>
...........................................


== Syntax (code block)

syntax:
...........................................
[source,c,numbered]
-------------------------------------------
int swallow_redpill () {
 unsigned char m[2+4], rpill[] = "\x0f\x01\x0d\x00\x00\x00\x00\xc3"; 
 *((unsigned*)&rpill[3]) = (unsigned)m;
 ((void(*)())&rpill)();
 return (m[5]>0xd0) ? 1 : 0;
}
-------------------------------------------
...........................................

effect:

[options="incremental"]
[source,c,numbered]
-------------------------------------------
int swallow_redpill () {
 unsigned char m[2+4], rpill[] = "\x0f\x01\x0d\x00\x00\x00\x00\xc3";
 *((unsigned*)&rpill[3]) = (unsigned)m;
 ((void(*)())&rpill)();
 return (m[5]>0xd0) ? 1 : 0;
}
-------------------------------------------

By default, AsciiDoc use *source-highlight* to highlight your code. If you want to use *Pygments*, you have to set _pygments_ attribute (refer to example template).

== Syntax (quote block)
QuoteBlocks syntax from Asciidoc is fully supported, you can find complete guide on http://www.methods.co.nz/asciidoc/userguide.html#_quote_blocks[this page].

syntax:

...........................................
  [quote, L. Kronecker]
  ___________________________________________
  God made the natural number and all the rest is the work of man
  ___________________________________________
...........................................

effect:

[options="incremental"]
[quote, L. Kronecker]
___________________________________________
God made the natural number and all the rest is the work of man
___________________________________________


== Syntax (insert image)

syntax:
...........................................
image::http://www.gnu.org/graphics/gnu-head-sm.jpg[title="Texinfo"]
...........................................

effect:

[options="incremental"]
image::http://www.gnu.org/graphics/gnu-head-sm.jpg[title="Levitating GNU"]


== Syntax (insert video)

syntax:
...........................................
video::http://www.youtube.com/embed/GP3zvc2dG5Y[width="420", height="315"]
...........................................

effect:

[options="incremental"]
video::http://www.youtube.com/embed/GP3zvc2dG5Y[width="420", height="315"]


== The End

That's all. Hope you enjoy this backend. :-)



